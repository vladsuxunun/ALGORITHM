#include <iostream>
#include <stdexcept>
using namespace std;

/* Во время работы у программы есть какой-то объем памяти, к которой она может обращаться и брать оттуда ресурсы.
Эта память называет heap.

Существует 2 состояния программы.
1) Compilation
То есть когда ты только-только строишь решение. Компилятор проходится по твоей программе, проверяет ее на ошибки и
переводит твою программу из языка C++ в язык ассемблера, чтобы машина поняла твой код.
2) Running
То есть когда уже вышла черная консоль. Когда уже программа непосредственно работает.

Существует 2 типа обращения к heap.

1) Статичный.

То есть программа берет необходимые ей ресурсы во время компиляции.
Например:

int a[10];

В данном примере программа возьмет из памяти (heap) 40 байт (4 * 10) во время компиляции.
И во время работы (running) эти 40 байт уже заняты и программа вернуть их не может, пока не она не завершится.

2) Динамичный

То есть программа берет необходимые ей ресурсы прямо во время работы (running).

Пример:

int n;
cin>>n;

int *a = new int[n];

В данном примере, программа вначале запустится, потом во вермя запуска она попросит у польователя ввести число (n),
потом только решит, сколько ресурсов ей надо взять из памяти. Если пользователь ввел число 5, то значит
программе нужно будет взять из памяти 20 (5*4) байт. Другими словами, обращение к памяти (heap) идет динамично.

*/

int main()
{
    int n;
    cin>>n;

    int *a = new int[n];

    for(int i = 0; i < n; i++)
    {
        a[i] = 8;
    }

    for (int i = 0; i < n; i++)
        cout << *(a + i) << " ";

    cout << endl;

    return 0;
}
